<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markus Sauerberg</title>
    <link>/author/markus-sauerberg/</link>
      <atom:link href="/author/markus-sauerberg/index.xml" rel="self" type="application/rss+xml" />
    <description>Markus Sauerberg</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 22 Jul 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>Markus Sauerberg</title>
      <link>/author/markus-sauerberg/</link>
    </image>
    
    <item>
      <title>Human costs of the first wave of the COVID-19 pandemic in the major epicenters in Italy</title>
      <link>/publication/vyrb/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      <guid>/publication/vyrb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The impact of population&#39;s educational composition on Healthy Life Years: An empirical illustration of 16 European countries</title>
      <link>/publication/hlyedu/</link>
      <pubDate>Sat, 26 Jun 2021 00:00:00 +0000</pubDate>
      <guid>/publication/hlyedu/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Das Mortalit채tsgeschehen w채hrend der COVID-19-Pandemie in Deutschland und anderen europ채ischen L채ndern</title>
      <link>/publication/popeurope/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0000</pubDate>
      <guid>/publication/popeurope/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The cross-sectional average length of healthy life (HCAL): a measure that summarizes the history of cohort health and mortality</title>
      <link>/publication/hcal/</link>
      <pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/publication/hcal/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Life Expectancy: Frequently Used, but Hardly Understood</title>
      <link>/publication/le/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/publication/le/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
l steps. For example, the $e_x$ values provided by Eurostat have only one decimal place. This limits the accuracy of the $l_x$ derivation and might result in constant $l_x$ values for several ages. To overcome this issue, we fitted a non-parametric curve to the data and predicted $e_x$ values with more decimal places. More specifically, we used the loess() function in R in order to obtain $e_x$ values with more decimal places that are as close as possible to the original $e_x$ values. In some cases, e.g., for the highly educated subpopulation in very low-mortality countries, the proposed derivation procedure still produces constant $l_x$ values at young ages. We solved this issue by focusing on $e_{30}$ and HLY at age 30.&lt;/p&gt;
&lt;p&gt;The following code provides an example for calculating education-specific life tables when only the education-specific $e_x$ values are known. In other words, the aim of the code is to calculate the life table backwards, namely from $e_x$ to $p_x$. This is necessary because Eurostat does not provide education-specific life tables, but education-specific $e_x$ values are available. Please note, the results in this example will differ from the results in my paper (Sauerberg 2021) due to updates in the Eurostat database.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)
library(eurostat)
#please load these packages and download the data like this:
data &amp;lt;- get_eurostat(&amp;quot;demo_mlexpecedu&amp;quot;, time_format = &amp;quot;num&amp;quot;)

#rename and redefine the file 
data$isced11 &amp;lt;- as.character(data$isced11)
data$isced11 &amp;lt;- ifelse(data$isced11==&amp;quot;ED0-2&amp;quot;, &amp;quot;lower&amp;quot;, data$isced11)
data$isced11 &amp;lt;- ifelse(data$isced11==&amp;quot;ED3_4&amp;quot;, &amp;quot;middle&amp;quot;, data$isced11)
data$isced11 &amp;lt;- ifelse(data$isced11==&amp;quot;ED5-8&amp;quot;, &amp;quot;higher&amp;quot;, data$isced11)
data$isced11 &amp;lt;- ifelse(data$isced11==&amp;quot;TOTAL&amp;quot;, &amp;quot;total&amp;quot;, data$isced11)

data$age &amp;lt;- as.character(data$age)
data$age &amp;lt;- ifelse(data$age==&amp;quot;Y_LT1&amp;quot;, &amp;quot;Y0&amp;quot;, data$age)
data$age &amp;lt;- ifelse(data$age==&amp;quot;Y_GE85&amp;quot;, &amp;quot;Y85&amp;quot;, data$age)
data$age &amp;lt;- substring(data$age, 2)

data &amp;lt;- data[,-1]
colnames(data) &amp;lt;- c(&amp;quot;sex&amp;quot;,&amp;quot;age&amp;quot;,&amp;quot;edu&amp;quot;,&amp;quot;country&amp;quot;,&amp;quot;year&amp;quot;,&amp;quot;ex&amp;quot;)
data$age &amp;lt;- as.numeric(data$age)
#Filter for the year 2016, as we have done
data &amp;lt;- filter(data, year==2016)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following function has the arguments &amp;ldquo;country.select&amp;rdquo;, &amp;ldquo;edu.select&amp;rdquo; and &amp;ldquo;sex.select&amp;rdquo;. Thus, the funcation allows to derive life tables for each educational level (high, middle, low, and total), for each country with available data (16 European countries), separated for men and women.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my.function &amp;lt;- function(country.select, edu.select, sex.select) {

    select.country &amp;lt;- arrange(filter(data, country==country.select ,edu==edu.select &amp;amp;
                                               sex==sex.select),age)

#smooth to get more decimals by applying the loess function,
#then predict ex with more decimals
    grab.LE &amp;lt;- select.country$ex
    smooth.it &amp;lt;- loess(grab.LE~select.country$age, span=0.2)
    predict.it &amp;lt;- predict(smooth.it, seq(0,85,1))
    select.country$ex.decimals &amp;lt;- predict.it

    LT.derive &amp;lt;- data.frame(Age=0:85)
    LT.derive$lx &amp;lt;- NA

    LT.derive$ex &amp;lt;- select.country$ex.decimals
    LT.derive$lx[1] &amp;lt;- 100000
    LT.derive$Tx[1] &amp;lt;- 100000*select.country$ex.decimals[1]
    
#this loop refers to equation 1 in the paper
    for (j in 2:86) {

        upper &amp;lt;- LT.derive$lx[j-1]*(2*LT.derive$ex[j-1]-1)
        bottom &amp;lt;- 1+2*LT.derive$ex[j]
        LT.derive$lx[j] &amp;lt;- upper/bottom
    }
#Checks if lx is monotonic decreasing, i.e., no resurrection in the life table
    lx.diff &amp;lt;- diff(LT.derive$lx)
    lx.diff &amp;lt;- round(lx.diff, 5)

    if (all(diff(lx.diff) &amp;lt; 0)) {

        px &amp;lt;- c(LT.frame$lx[-1]/LT.frame$lx[-86],0)

    }else{
#sometimes, it is not, so I force it =)
#please note, this occurs usually at very young ages and won&#39;t affect
#LE at age 30 or older
        lx.diff[lx.diff&amp;gt;=0] &amp;lt;- -runif(length(lx.diff[lx.diff&amp;gt;=0]), 1, 5)
        lx.monotonic &amp;lt;- cumsum(c(100000, lx.diff))
        px &amp;lt;- c(lx.monotonic[-1]/lx.monotonic[-86],0)

        }
#from here, the life table is constructed very standardly
    lx &amp;lt;- round(c(100000, (cumprod(px)*100000)[1:(length(px)-1)]))
    dx &amp;lt;- round(c(-diff(lx), lx[length(lx)]))
    LT.derive$lx &amp;lt;- lx
    LT.derive$dx &amp;lt;- dx
    LT.derive$px &amp;lt;- px
    Lx1 &amp;lt;- lx[-1]+0.5[-length(px)]*dx[-length(dx)]
    Lx.open &amp;lt;- LT.derive$Tx[1]-sum(Lx1)
    LT.derive$Lx &amp;lt;- round(c(Lx1, Lx.open))
    LT.derive$Tx &amp;lt;- rev(cumsum(rev(LT.derive$Lx)))
    LT.derive$ex.derived &amp;lt;- LT.derive$Tx/LT.derive$lx
    LT.derive$ex.original &amp;lt;- select.country$ex
    LT.derive$diff &amp;lt;- LT.derive$ex.original-LT.derive$ex.derived
    LT.derive$Country &amp;lt;- country.select
    LT.derive$Edu &amp;lt;- edu.select
    LT.derive$Sex &amp;lt;- sex.select

    return(LT.derive[,c(&amp;quot;Country&amp;quot;,&amp;quot;Edu&amp;quot;,&amp;quot;Sex&amp;quot;,&amp;quot;Age&amp;quot;,&amp;quot;px&amp;quot;,&amp;quot;lx&amp;quot;,&amp;quot;dx&amp;quot;,&amp;quot;Lx&amp;quot;,
                        &amp;quot;Tx&amp;quot;,&amp;quot;ex.derived&amp;quot;,&amp;quot;ex.original&amp;quot;,&amp;quot;diff&amp;quot;)])
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following code applies the function to all 16 European countries by educational attainment, stratified by sex.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#these are the country codes
edu.countries &amp;lt;- c(&amp;quot;BG&amp;quot;,&amp;quot;DK&amp;quot;,&amp;quot;EE&amp;quot;,&amp;quot;EL&amp;quot;,&amp;quot;HR&amp;quot;,&amp;quot;IT&amp;quot;,&amp;quot;HU&amp;quot;, #CZ is currently not available
                   &amp;quot;PL&amp;quot;,&amp;quot;PT&amp;quot;,&amp;quot;RO&amp;quot;,&amp;quot;SI&amp;quot;,&amp;quot;SK&amp;quot;,&amp;quot;FI&amp;quot;,&amp;quot;SE&amp;quot;,&amp;quot;NO&amp;quot;)


###Females###
out.females &amp;lt;- c()

for (country.select in edu.countries) {

    for (edu.select in c(&amp;quot;higher&amp;quot;,&amp;quot;middle&amp;quot;,&amp;quot;lower&amp;quot;)) {

        out.females &amp;lt;- rbind(out.females,my.function(country.select, edu.select, &amp;quot;F&amp;quot;))
}
}


###Males###
out.males &amp;lt;- c()

for (country.select in edu.countries) {

    for (edu.select in c(&amp;quot;higher&amp;quot;,&amp;quot;middle&amp;quot;,&amp;quot;lower&amp;quot;)) {

        out.males &amp;lt;- rbind(out.males,my.function(country.select, edu.select, &amp;quot;M&amp;quot;))
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, I plot the difference between the original $e_x$ and the derived $e_x$.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;par(mfrow=c(3,3))
for (edu in c(&amp;quot;higher&amp;quot;,&amp;quot;middle&amp;quot;,&amp;quot;lower&amp;quot;)) {
    plot(1,1, type=&amp;quot;n&amp;quot;, xlim=c(1,16), ylim=c(-0.2,0.2),
         main=paste(&amp;quot;Females&amp;quot;,edu,sep=&amp;quot; &amp;quot;), xlab=&amp;quot;Countries&amp;quot;,
         ylab=&amp;quot;LE 30 original - LE30 derived&amp;quot;)
    points(1:15,out.females$diff[out.females$Edu==edu &amp;amp; out.females$Age==30])
    text(1:15,out.females$diff[out.females$Edu==edu &amp;amp; out.females$Age==30], 1:16,
         label=out.females$Country[out.females$Edu==edu &amp;amp; out.females$Age==30])
}

for (edu in c(&amp;quot;higher&amp;quot;,&amp;quot;middle&amp;quot;,&amp;quot;lower&amp;quot;)) {
    plot(1,1, type=&amp;quot;n&amp;quot;, xlim=c(1,16), ylim=c(-0.2,0.2),
         main=paste(&amp;quot;Males&amp;quot;,edu,sep=&amp;quot; &amp;quot;), xlab=&amp;quot;Countries&amp;quot;,
         ylab=&amp;quot;LE 30 original - LE30 derived&amp;quot;)
    points(1:15,out.males$diff[out.males$Edu==edu &amp;amp; out.males$Age==30])
    text(1:15,out.males$diff[out.males$Edu==edu &amp;amp; out.males$Age==30], 1:16,
         label=out.males$Country[out.males$Edu==edu &amp;amp; out.males$Age==30])
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;complete-life-tables-by-age-and-education-stratified-by-women-and-men&#34;&gt;Complete life tables by age and education (stratified by women and men)&lt;/h2&gt;
&lt;p&gt;This prints all the age- and education-specific life tables (the output it omitted).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(knitr)

table.fun &amp;lt;- function(country.select) {
    
    print(
        kable(filter(out.females, Country==country.select &amp;amp; Edu==&amp;quot;higher&amp;quot;),
              digits=4, caption=paste(&amp;quot;Life table for high-educated women in&amp;quot;,
                                      country.select,&amp;quot;, 2016&amp;quot;,sep=&amp;quot; &amp;quot;)) 
        )
    print(
        kable(filter(out.females, Country==country.select &amp;amp; Edu==&amp;quot;middle&amp;quot;),
              digits=4, caption=paste(&amp;quot;Life table for middle-educated women in&amp;quot;,
                                      country.select,&amp;quot;, 2016&amp;quot;,sep=&amp;quot; &amp;quot;)) 
          )
    print(
        kable(filter(out.females, Country==country.select &amp;amp; Edu==&amp;quot;lower&amp;quot;),
              digits=4, caption=paste(&amp;quot;Life table for low-educated women in&amp;quot;,
                                      country.select,&amp;quot;, 2016&amp;quot;,sep=&amp;quot; &amp;quot;))
        )

    print(
        kable(filter(out.males, Country==country.select &amp;amp; Edu==&amp;quot;higher&amp;quot;),
              digits=4, caption=paste(&amp;quot;Life table for high-educated men in&amp;quot;,
                                      country.select,&amp;quot;, 2016&amp;quot;,sep=&amp;quot; &amp;quot;)) 
            )
    
    print(
        kable(filter(out.males, Country==country.select &amp;amp; Edu==&amp;quot;middle&amp;quot;),
              digits=4, caption=paste(&amp;quot;Life table for middle-educated men in&amp;quot;,
                                      country.select,&amp;quot;, 2016&amp;quot;,sep=&amp;quot; &amp;quot;)) 
            )
    print(
        kable(filter(out.males, Country==country.select &amp;amp; Edu==&amp;quot;lower&amp;quot;),
              digits=4, caption=paste(&amp;quot;Life table for low-educated men in&amp;quot;,
                                      country.select,&amp;quot;, 2016&amp;quot;,sep=&amp;quot; &amp;quot;)) 
            )    
}

for (country in edu.countries) {
    table.fun(country)  
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sauerberg, M. (2021). The imapact of population&amp;rsquo;s educational attainment on Healthy Life Years in Europe: An empirical illustration of 16 European countries. SSM - Population Health, 15(100857).&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
